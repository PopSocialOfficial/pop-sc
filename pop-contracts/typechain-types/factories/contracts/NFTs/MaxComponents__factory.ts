/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MaxComponents,
  MaxComponentsInterface,
} from "../../../contracts/NFTs/MaxComponents";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "energyPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "listOfTokenIdsOwned",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_points",
        type: "uint256",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040805160208101909152600081526200002c81620000a4565b506200003833620000bd565b60408051808201909152600e8082526d4d617820436f6d706f6e656e747360901b60209092019182526200006f916004916200010f565b50604080518082019091526004808252634d41584360e01b60209092019182526200009d916005916200010f565b50620001f2565b8051620000b99060029060208401906200010f565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011d90620001b5565b90600052602060002090601f0160209004810192826200014157600085556200018c565b82601f106200015c57805160ff19168380011785556200018c565b828001600101855582156200018c579182015b828111156200018c5782518255916020019190600101906200016f565b506200019a9291506200019e565b5090565b5b808211156200019a57600081556001016200019f565b600181811c90821680620001ca57607f821691505b60208210811415620001ec57634e487b7160e01b600052602260045260246000fd5b50919050565b611e5980620002026000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c80636d915615116100ad578063a22cb46511610071578063a22cb46514610270578063c87b56dd14610283578063e985e9c514610296578063f242432a146102d2578063f2fde38b146102e557600080fd5b80636d9156151461021f578063715018a614610232578063731133e91461023a5780638da5cb5b1461024d57806395d89b411461026857600080fd5b80631f7fdffa116100f45780631f7fdffa146101965780632eb2c2d6146101ab578063300343a8146101be5780634c934c93146101df5780634e1273f4146101ff57600080fd5b8062fdd58e1461012557806301ffc9a71461014b57806306fdde031461016e5780630e89341c14610183575b600080fd5b610138610133366004611410565b6102f8565b6040519081526020015b60405180910390f35b61015e610159366004611450565b61038e565b6040519015158152602001610142565b6101766103e0565b60405161014291906114c1565b6101766101913660046114d4565b61046e565b6101a96101a4366004611643565b610510565b005b6101a96101b93660046116dc565b61052a565b6101d16101cc366004611786565b610576565b6040516101429291906117dc565b6101386101ed3660046114d4565b60076020526000908152604090205481565b61021261020d36600461180a565b610691565b60405161014291906118d5565b6101a961022d3660046118e8565b6107ae565b6101a961081d565b6101a961024836600461194c565b610831565b6003546040516001600160a01b039091168152602001610142565b610176610845565b6101a961027e3660046119a1565b610852565b6101766102913660046114d4565b610861565b61015e6102a43660046119dd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101a96102e0366004611a10565b61087a565b6101a96102f3366004611786565b6108bf565b60006001600160a01b0383166103685760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806103bf57506001600160e01b031982166303a24d0760e21b145b806103da57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600480546103ed90611a75565b80601f016020809104026020016040519081016040528092919081815260200182805461041990611a75565b80156104665780601f1061043b57610100808354040283529160200191610466565b820191906000526020600020905b81548152906001019060200180831161044957829003601f168201915b505050505081565b600081815260066020526040902080546060919061048b90611a75565b80601f01602080910402602001604051908101604052809291908181526020018280546104b790611a75565b80156105045780601f106104d957610100808354040283529160200191610504565b820191906000526020600020905b8154815290600101906020018083116104e757829003601f168201915b50505050509050919050565b610518610938565b61052484848484610992565b50505050565b6001600160a01b038516331480610546575061054685336102a4565b6105625760405162461bcd60e51b815260040161035f90611ab0565b61056f8585858585610aec565b5050505050565b6001600160a01b03811660009081526008602090815260408083208054825181850281018501909352808352606094859490939291908301828280156105db57602002820191906000526020600020905b8154815260200190600101908083116105c7575b505050505090506000815167ffffffffffffffff8111156105fe576105fe6114ed565b604051908082528060200260200182016040528015610627578160200160208202803683370190505b50905060005b8251811015610686576106598684838151811061064c5761064c611afe565b60200260200101516102f8565b82828151811061066b5761066b611afe565b602090810291909101015261067f81611b2a565b905061062d565b509094909350915050565b606081518351146106f65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161035f565b6000835167ffffffffffffffff811115610712576107126114ed565b60405190808252806020026020018201604052801561073b578160200160208202803683370190505b50905060005b84518110156107a65761077985828151811061075f5761075f611afe565b602002602001015185838151811061064c5761064c611afe565b82828151811061078b5761078b611afe565b602090810291909101015261079f81611b2a565b9050610741565b509392505050565b6107b6610938565b60008381526007602090815260408083208490556006825290912083516107df9285019061135b565b50827f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b8360405161081091906114c1565b60405180910390a2505050565b610825610938565b61082f6000610c96565b565b610839610938565b61052484848484610ce8565b600580546103ed90611a75565b61085d338383610dd1565b5050565b600660205260009081526040902080546103ed90611a75565b6001600160a01b038516331480610896575061089685336102a4565b6108b25760405162461bcd60e51b815260040161035f90611ab0565b61056f8585858585610eb2565b6108c7610938565b6001600160a01b03811661092c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035f565b61093581610c96565b50565b6003546001600160a01b0316331461082f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035f565b6001600160a01b0384166109b85760405162461bcd60e51b815260040161035f90611b45565b81518351146109d95760405162461bcd60e51b815260040161035f90611b86565b3360005b8451811015610a75578381815181106109f8576109f8611afe565b6020026020010151600080878481518110610a1557610a15611afe565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610a5d9190611bce565b90915550819050610a6d81611b2a565b9150506109dd565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610ac69291906117dc565b60405180910390a4610add81600087878787610fea565b61056f816000878787876110f9565b8151835114610b0d5760405162461bcd60e51b815260040161035f90611b86565b6001600160a01b038416610b335760405162461bcd60e51b815260040161035f90611be6565b3360005b8451811015610c1a576000858281518110610b5457610b54611afe565b602002602001015190506000858381518110610b7257610b72611afe565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610bc25760405162461bcd60e51b815260040161035f90611c2b565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610bff908490611bce565b9250508190555050505080610c1390611b2a565b9050610b37565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610c6a9291906117dc565b60405180910390a4610c80818787878787610fea565b610c8e8187878787876110f9565b505050505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416610d0e5760405162461bcd60e51b815260040161035f90611b45565b336000610d1a85611255565b90506000610d2785611255565b90506000868152602081815260408083206001600160a01b038b16845290915281208054879290610d59908490611bce565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610db983600089858589610fea565b610dc8836000898989896112a0565b50505050505050565b816001600160a01b0316836001600160a01b03161415610e455760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161035f565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610ed85760405162461bcd60e51b815260040161035f90611be6565b336000610ee485611255565b90506000610ef185611255565b90506000868152602081815260408083206001600160a01b038c16845290915290205485811015610f345760405162461bcd60e51b815260040161035f90611c2b565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610f71908490611bce565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610fd1848a8a86868a610fea565b610fdf848a8a8a8a8a6112a0565b505050505050505050565b60005b8351811015610dc8576001600160a01b03851660009081526008602052604081205490805b828110156110945786848151811061102c5761102c611afe565b6020026020010151600860008a6001600160a01b03166001600160a01b03168152602001908152602001600020828154811061106a5761106a611afe565b906000526020600020015414156110845760019150611094565b61108d81611b2a565b9050611012565b50806110e6576001600160a01b038716600090815260086020526040902086518790859081106110c6576110c6611afe565b602090810291909101810151825460018101845560009384529190922001555b5050806110f290611b2a565b9050610fed565b6001600160a01b0384163b15610c8e5760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061113d9089908990889088908890600401611c75565b6020604051808303816000875af1925050508015611178575060408051601f3d908101601f1916820190925261117591810190611cd3565b60015b61122557611184611cf0565b806308c379a014156111be5750611199611d0c565b806111a457506111c0565b8060405162461bcd60e51b815260040161035f91906114c1565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161035f565b6001600160e01b0319811663bc197c8160e01b14610dc85760405162461bcd60e51b815260040161035f90611d96565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061128f5761128f611afe565b602090810291909101015292915050565b6001600160a01b0384163b15610c8e5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906112e49089908990889088908890600401611dde565b6020604051808303816000875af192505050801561131f575060408051601f3d908101601f1916820190925261131c91810190611cd3565b60015b61132b57611184611cf0565b6001600160e01b0319811663f23a6e6160e01b14610dc85760405162461bcd60e51b815260040161035f90611d96565b82805461136790611a75565b90600052602060002090601f01602090048101928261138957600085556113cf565b82601f106113a257805160ff19168380011785556113cf565b828001600101855582156113cf579182015b828111156113cf5782518255916020019190600101906113b4565b506113db9291506113df565b5090565b5b808211156113db57600081556001016113e0565b80356001600160a01b038116811461140b57600080fd5b919050565b6000806040838503121561142357600080fd5b61142c836113f4565b946020939093013593505050565b6001600160e01b03198116811461093557600080fd5b60006020828403121561146257600080fd5b813561146d8161143a565b9392505050565b6000815180845260005b8181101561149a5760208185018101518683018201520161147e565b818111156114ac576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061146d6020830184611474565b6000602082840312156114e657600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611529576115296114ed565b6040525050565b600067ffffffffffffffff82111561154a5761154a6114ed565b5060051b60200190565b600082601f83011261156557600080fd5b8135602061157282611530565b60405161157f8282611503565b83815260059390931b850182019282810191508684111561159f57600080fd5b8286015b848110156115ba57803583529183019183016115a3565b509695505050505050565b600067ffffffffffffffff8311156115df576115df6114ed565b6040516115f6601f8501601f191660200182611503565b80915083815284848401111561160b57600080fd5b83836020830137600060208583010152509392505050565b600082601f83011261163457600080fd5b61146d838335602085016115c5565b6000806000806080858703121561165957600080fd5b611662856113f4565b9350602085013567ffffffffffffffff8082111561167f57600080fd5b61168b88838901611554565b945060408701359150808211156116a157600080fd5b6116ad88838901611554565b935060608701359150808211156116c357600080fd5b506116d087828801611623565b91505092959194509250565b600080600080600060a086880312156116f457600080fd5b6116fd866113f4565b945061170b602087016113f4565b9350604086013567ffffffffffffffff8082111561172857600080fd5b61173489838a01611554565b9450606088013591508082111561174a57600080fd5b61175689838a01611554565b9350608088013591508082111561176c57600080fd5b5061177988828901611623565b9150509295509295909350565b60006020828403121561179857600080fd5b61146d826113f4565b600081518084526020808501945080840160005b838110156117d1578151875295820195908201906001016117b5565b509495945050505050565b6040815260006117ef60408301856117a1565b828103602084015261180181856117a1565b95945050505050565b6000806040838503121561181d57600080fd5b823567ffffffffffffffff8082111561183557600080fd5b818501915085601f83011261184957600080fd5b8135602061185682611530565b6040516118638282611503565b83815260059390931b850182019282810191508984111561188357600080fd5b948201945b838610156118a857611899866113f4565b82529482019490820190611888565b965050860135925050808211156118be57600080fd5b506118cb85828601611554565b9150509250929050565b60208152600061146d60208301846117a1565b6000806000606084860312156118fd57600080fd5b83359250602084013567ffffffffffffffff81111561191b57600080fd5b8401601f8101861361192c57600080fd5b61193b868235602084016115c5565b925050604084013590509250925092565b6000806000806080858703121561196257600080fd5b61196b856113f4565b93506020850135925060408501359150606085013567ffffffffffffffff81111561199557600080fd5b6116d087828801611623565b600080604083850312156119b457600080fd5b6119bd836113f4565b9150602083013580151581146119d257600080fd5b809150509250929050565b600080604083850312156119f057600080fd5b6119f9836113f4565b9150611a07602084016113f4565b90509250929050565b600080600080600060a08688031215611a2857600080fd5b611a31866113f4565b9450611a3f602087016113f4565b93506040860135925060608601359150608086013567ffffffffffffffff811115611a6957600080fd5b61177988828901611623565b600181811c90821680611a8957607f821691505b60208210811415611aaa57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611b3e57611b3e611b14565b5060010190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60008219821115611be157611be1611b14565b500190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611ca1908301866117a1565b8281036060840152611cb381866117a1565b90508281036080840152611cc78185611474565b98975050505050505050565b600060208284031215611ce557600080fd5b815161146d8161143a565b600060033d1115611d095760046000803e5060005160e01c5b90565b600060443d1015611d1a5790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611d4a57505050505090565b8285019150815181811115611d625750505050505090565b843d8701016020828501011115611d7c5750505050505090565b611d8b60208286010187611503565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611e1890830184611474565b97965050505050505056fea2646970667358221220558af1051bad217c60b6d2650a13f5ab23f7a535f5974247825bec91cf2b25bb64736f6c634300080a0033";

type MaxComponentsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MaxComponentsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MaxComponents__factory extends ContractFactory {
  constructor(...args: MaxComponentsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MaxComponents> {
    return super.deploy(overrides || {}) as Promise<MaxComponents>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MaxComponents {
    return super.attach(address) as MaxComponents;
  }
  override connect(signer: Signer): MaxComponents__factory {
    return super.connect(signer) as MaxComponents__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaxComponentsInterface {
    return new utils.Interface(_abi) as MaxComponentsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MaxComponents {
    return new Contract(address, _abi, signerOrProvider) as MaxComponents;
  }
}
