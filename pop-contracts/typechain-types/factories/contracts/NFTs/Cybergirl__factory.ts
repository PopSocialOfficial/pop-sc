/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Cybergirl,
  CybergirlInterface,
} from "../../../contracts/NFTs/Cybergirl";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252601181527010de5c1a195c9cc810de58995c99da5c9b607a1b6020808301918252835180850190945260048452634359434760e01b9084015281519192916200006791600091620000f6565b5080516200007d906001906020840190620000f6565b5050506200009a62000094620000a060201b60201c565b620000a4565b620001d9565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000104906200019c565b90600052602060002090601f01602090048101928262000128576000855562000173565b82601f106200014357805160ff191683800117855562000173565b8280016001018555821562000173579182015b828111156200017357825182559160200191906001019062000156565b506200018192915062000185565b5090565b5b8082111562000181576000815560010162000186565b600181811c90821680620001b157607f821691505b60208210811415620001d357634e487b7160e01b600052602260045260246000fd5b50919050565b61181380620001e96000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063c4e41b2211610071578063c4e41b2214610239578063c87b56dd14610241578063d204c45e14610254578063e985e9c514610267578063f2fde38b146102a357600080fd5b80638da5cb5b146101fa57806395d89b411461020b578063a22cb46514610213578063b88d4fde1461022657600080fd5b806323b872dd116100e957806323b872dd1461019857806342842e0e146101ab5780636352211e146101be57806370a08231146101d1578063715018a6146101f257600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610183575b600080fd5b61012e61012936600461131e565b6102b6565b60405190151581526020015b60405180910390f35b61014b6102c7565b60405161013a9190611393565b61016b6101663660046113a6565b610359565b6040516001600160a01b03909116815260200161013a565b6101966101913660046113db565b610380565b005b6101966101a6366004611405565b61049b565b6101966101b9366004611405565b6104cc565b61016b6101cc3660046113a6565b6104e7565b6101e46101df366004611441565b610547565b60405190815260200161013a565b6101966105cd565b6007546001600160a01b031661016b565b61014b6105e1565b61019661022136600461145c565b6105f0565b610196610234366004611524565b6105ff565b6101e4610637565b61014b61024f3660046113a6565b610647565b6101966102623660046115a0565b610652565b61012e610275366004611602565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101966102b1366004611441565b610689565b60006102c182610702565b92915050565b6060600080546102d690611635565b80601f016020809104026020016040519081016040528092919081815260200182805461030290611635565b801561034f5780601f106103245761010080835404028352916020019161034f565b820191906000526020600020905b81548152906001019060200180831161033257829003601f168201915b5050505050905090565b600061036482610727565b506000908152600460205260409020546001600160a01b031690565b600061038b826104e7565b9050806001600160a01b0316836001600160a01b031614156103fe5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061041a575061041a8133610275565b61048c5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103f5565b6104968383610786565b505050565b6104a533826107f4565b6104c15760405162461bcd60e51b81526004016103f590611670565b610496838383610873565b610496838383604051806020016040528060008152506105ff565b6000818152600260205260408120546001600160a01b0316806102c15760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f5565b60006001600160a01b0382166105b15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103f5565b506001600160a01b031660009081526003602052604090205490565b6105d56109d7565b6105df6000610a31565b565b6060600180546102d690611635565b6105fb338383610a83565b5050565b61060933836107f4565b6106255760405162461bcd60e51b81526004016103f590611670565b61063184848484610b52565b50505050565b600061064260085490565b905090565b60606102c182610b85565b61065a6109d7565b600061066560085490565b9050610675600880546001019055565b61067f8382610c8e565b6104968183610ca8565b6106916109d7565b6001600160a01b0381166106f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f5565b6106ff81610a31565b50565b60006001600160e01b03198216632483248360e11b14806102c157506102c182610d7a565b6000818152600260205260409020546001600160a01b03166106ff5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103f5565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906107bb826104e7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610800836104e7565b9050806001600160a01b0316846001600160a01b0316148061084757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061086b5750836001600160a01b031661086084610359565b6001600160a01b0316145b949350505050565b826001600160a01b0316610886826104e7565b6001600160a01b0316146108ac5760405162461bcd60e51b81526004016103f5906116bd565b6001600160a01b03821661090e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103f5565b826001600160a01b0316610921826104e7565b6001600160a01b0316146109475760405162461bcd60e51b81526004016103f5906116bd565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6007546001600160a01b031633146105df5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f5565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415610ae55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103f5565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b5d848484610873565b610b6984848484610dca565b6106315760405162461bcd60e51b81526004016103f590611702565b6060610b9082610727565b60008281526006602052604081208054610ba990611635565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd590611635565b8015610c225780601f10610bf757610100808354040283529160200191610c22565b820191906000526020600020905b815481529060010190602001808311610c0557829003601f168201915b505050505090506000610c4060408051602081019091526000815290565b9050805160001415610c53575092915050565b815115610c85578082604051602001610c6d929190611754565b60405160208183030381529060405292505050919050565b61086b84610ec8565b6105fb828260405180602001604052806000815250610f3c565b6000828152600260205260409020546001600160a01b0316610d235760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103f5565b60008281526006602090815260409091208251610d429284019061126f565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60006001600160e01b031982166380ac58cd60e01b1480610dab57506001600160e01b03198216635b5e139f60e01b145b806102c157506301ffc9a760e01b6001600160e01b03198316146102c1565b60006001600160a01b0384163b15610ebd57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e0e903390899088908890600401611783565b6020604051808303816000875af1925050508015610e49575060408051601f3d908101601f19168201909252610e46918101906117c0565b60015b610ea3573d808015610e77576040519150601f19603f3d011682016040523d82523d6000602084013e610e7c565b606091505b508051610e9b5760405162461bcd60e51b81526004016103f590611702565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061086b565b506001949350505050565b6060610ed382610727565b6000610eea60408051602081019091526000815290565b90506000815111610f0a5760405180602001604052806000815250610f35565b80610f1484610f6f565b604051602001610f25929190611754565b6040516020818303038152906040525b9392505050565b610f46838361100c565b610f536000848484610dca565b6104965760405162461bcd60e51b81526004016103f590611702565b60606000610f7c83611197565b600101905060008167ffffffffffffffff811115610f9c57610f9c611498565b6040519080825280601f01601f191660200182016040528015610fc6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610fff57611004565b610fd0565b509392505050565b6001600160a01b0382166110625760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103f5565b6000818152600260205260409020546001600160a01b0316156110c75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f5565b6000818152600260205260409020546001600160a01b03161561112c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103f5565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106111d65772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611202576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061122057662386f26fc10000830492506010015b6305f5e1008310611238576305f5e100830492506008015b612710831061124c57612710830492506004015b6064831061125e576064830492506002015b600a83106102c15760010192915050565b82805461127b90611635565b90600052602060002090601f01602090048101928261129d57600085556112e3565b82601f106112b657805160ff19168380011785556112e3565b828001600101855582156112e3579182015b828111156112e35782518255916020019190600101906112c8565b506112ef9291506112f3565b5090565b5b808211156112ef57600081556001016112f4565b6001600160e01b0319811681146106ff57600080fd5b60006020828403121561133057600080fd5b8135610f3581611308565b60005b8381101561135657818101518382015260200161133e565b838111156106315750506000910152565b6000815180845261137f81602086016020860161133b565b601f01601f19169290920160200192915050565b602081526000610f356020830184611367565b6000602082840312156113b857600080fd5b5035919050565b80356001600160a01b03811681146113d657600080fd5b919050565b600080604083850312156113ee57600080fd5b6113f7836113bf565b946020939093013593505050565b60008060006060848603121561141a57600080fd5b611423846113bf565b9250611431602085016113bf565b9150604084013590509250925092565b60006020828403121561145357600080fd5b610f35826113bf565b6000806040838503121561146f57600080fd5b611478836113bf565b91506020830135801515811461148d57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156114c9576114c9611498565b604051601f8501601f19908116603f011681019082821181831017156114f1576114f1611498565b8160405280935085815286868601111561150a57600080fd5b858560208301376000602087830101525050509392505050565b6000806000806080858703121561153a57600080fd5b611543856113bf565b9350611551602086016113bf565b925060408501359150606085013567ffffffffffffffff81111561157457600080fd5b8501601f8101871361158557600080fd5b611594878235602084016114ae565b91505092959194509250565b600080604083850312156115b357600080fd5b6115bc836113bf565b9150602083013567ffffffffffffffff8111156115d857600080fd5b8301601f810185136115e957600080fd5b6115f8858235602084016114ae565b9150509250929050565b6000806040838503121561161557600080fd5b61161e836113bf565b915061162c602084016113bf565b90509250929050565b600181811c9082168061164957607f821691505b6020821081141561166a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000835161176681846020880161133b565b83519083019061177a81836020880161133b565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117b690830184611367565b9695505050505050565b6000602082840312156117d257600080fd5b8151610f358161130856fea264697066735822122095eb1818a1533fb9e29a99d81ddda11288a2bd31fda62424a35740b7c496728664736f6c634300080a0033";

type CybergirlConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CybergirlConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cybergirl__factory extends ContractFactory {
  constructor(...args: CybergirlConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cybergirl> {
    return super.deploy(overrides || {}) as Promise<Cybergirl>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cybergirl {
    return super.attach(address) as Cybergirl;
  }
  override connect(signer: Signer): Cybergirl__factory {
    return super.connect(signer) as Cybergirl__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CybergirlInterface {
    return new utils.Interface(_abi) as CybergirlInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Cybergirl {
    return new Contract(address, _abi, signerOrProvider) as Cybergirl;
  }
}
