/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Max, MaxInterface } from "../../../contracts/NFTs/Max";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_maxContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "listOfMaxTokenIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "listOfTokenIdsOwned",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_maxComponents",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_maxComponents",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "updateComponents",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620029d3380380620029d3833981016040819052620000349162000158565b60408051808201825260038082526209ac2f60eb1b6020808401828152855180870190965292855284015281519192916200007291600091620000b2565b50805162000088906001906020840190620000b2565b5050600880546001600160a01b0319166001600160a01b03939093169290921790915550620001c7565b828054620000c0906200018a565b90600052602060002090601f016020900481019282620000e457600085556200012f565b82601f10620000ff57805160ff19168380011785556200012f565b828001600101855582156200012f579182015b828111156200012f57825182559160200191906001019062000112565b506200013d92915062000141565b5090565b5b808211156200013d576000815560010162000142565b6000602082840312156200016b57600080fd5b81516001600160a01b03811681146200018357600080fd5b9392505050565b600181811c908216806200019f57607f821691505b60208210811415620001c157634e487b7160e01b600052602260045260246000fd5b50919050565b6127fc80620001d76000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063c4e41b221161007c578063c4e41b22146102db578063c87b56dd146102e3578063cfcf37e1146102f6578063db09c74d14610309578063e985e9c51461031c578063f23a6e611461035857600080fd5b806370a082311461023857806395d89b4114610259578063a22cb46514610261578063b88d4fde14610274578063bc197c811461028757600080fd5b806323b872dd116100ff57806323b872dd146101cc578063300343a8146101df57806330b101a3146101ff57806342842e0e146102125780636352211e1461022557600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a45780631898d18e146101b9575b600080fd5b61014f61014a366004611f34565b610391565b60405190151581526020015b60405180910390f35b61016c6103a2565b60405161015b9190611fa9565b61018c610187366004611fbc565b610434565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611ff1565b61045b565b005b6101b76101c736600461215a565b610576565b6101b76101da3660046121be565b610a6a565b6101f26101ed3660046121fa565b610a9b565b60405161015b9190612215565b6101b761020d366004612259565b610b07565b6101b76102203660046121be565b6110b7565b61018c610233366004611fbc565b6110d2565b61024b6102463660046121fa565b611132565b60405190815260200161015b565b61016c6111b8565b6101b761026f3660046122c6565b6111c7565b6101b7610282366004612302565b6111d6565b6102c261029536600461240c565b7fbc197c819b3e337a6f9652dd10becd7eef83032af3b9d958d3d42f669414662198975050505050505050565b6040516001600160e01b0319909116815260200161015b565b61024b61120e565b61016c6102f1366004611fbc565b61121e565b6101f2610304366004611fbc565b611229565b60085461018c906001600160a01b031681565b61014f61032a3660046124c7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102c26103663660046124fa565b7ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf979695505050505050565b600061039c82611289565b92915050565b6060600080546103b190612572565b80601f01602080910402602001604051908101604052809291908181526020018280546103dd90612572565b801561042a5780601f106103ff5761010080835404028352916020019161042a565b820191906000526020600020905b81548152906001019060200180831161040d57829003601f168201915b5050505050905090565b600061043f826112ae565b506000908152600460205260409020546001600160a01b031690565b6000610466826110d2565b9050806001600160a01b0316836001600160a01b031614156104d95760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104f557506104f5813361032a565b6105675760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104d0565b6105718383611310565b505050565b8180516006146105bd5760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c8409ac2f04098cadccee8d60731b60448201526064016104d0565b6000816000815181106105d2576105d26125ad565b60200260200101511015801561060257506064816000815181106105f8576105f86125ad565b6020026020010151105b8061062957506102588160008151811061061e5761061e6125ad565b602002602001015110155b61066a5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908109858dad9dc9bdd5b9960721b60448201526064016104d0565b60648160018151811061067f5761067f6125ad565b6020026020010151101580156106af575060c8816001815181106106a5576106a56125ad565b6020026020010151105b806106d65750610258816001815181106106cb576106cb6125ad565b602002602001015110155b6107145760405162461bcd60e51b815260206004820152600f60248201526e496e76616c696420436c6f7468657360881b60448201526064016104d0565b60c881600281518110610729576107296125ad565b60200260200101511015801561075a575061012c81600281518110610750576107506125ad565b6020026020010151105b80610781575061025881600281518110610776576107766125ad565b602002602001015110155b6107bc5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964204579657360a01b60448201526064016104d0565b61012c816003815181106107d2576107d26125ad565b6020026020010151101580156108035750610190816003815181106107f9576107f96125ad565b6020026020010151105b6108425760405162461bcd60e51b815260206004820152601060248201526f467572206973204d616e6461746f727960801b60448201526064016104d0565b61019081600481518110610858576108586125ad565b60200260200101511015801561088957506101f48160048151811061087f5761087f6125ad565b6020026020010151105b806108b05750610258816004815181106108a5576108a56125ad565b602002602001015110155b6108ea5760405162461bcd60e51b815260206004820152600b60248201526a125b9d985b1a590812185d60aa1b60448201526064016104d0565b6101f481600581518110610900576109006125ad565b602002602001015110156109465760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c8409adeeae8d609b1b60448201526064016104d0565b600061095160075490565b9050610961600780546001019055565b835160005b81811015610a11576000868281518110610982576109826125ad565b60200260200101519050610258811015610a0057600854604051637921219560e11b81526001600160a01b039091169063f242432a906109cd903390309086906001906004016125c3565b600060405180830381600087803b1580156109e757600080fd5b505af11580156109fb573d6000803e3d6000fd5b505050505b50610a0a81612611565b9050610966565b50610a1c338361137e565b336000908152600a60209081526040808320805460018101825590845282842001859055848352600982529091208651610a5892880190611e4b565b50610a638285611398565b5050505050565b610a74338261146a565b610a905760405162461bcd60e51b81526004016104d09061262c565b6105718383836114e9565b6001600160a01b0381166000908152600a6020908152604091829020805483518184028101840190945280845260609392830182828015610afb57602002820191906000526020600020905b815481526020019060010190808311610ae7575b50505050509050919050565b818051600614610b4e5760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c8409ac2f04098cadccee8d60731b60448201526064016104d0565b600081600081518110610b6357610b636125ad565b602002602001015110158015610b935750606481600081518110610b8957610b896125ad565b6020026020010151105b80610bba575061025881600081518110610baf57610baf6125ad565b602002602001015110155b610bfb5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908109858dad9dc9bdd5b9960721b60448201526064016104d0565b606481600181518110610c1057610c106125ad565b602002602001015110158015610c40575060c881600181518110610c3657610c366125ad565b6020026020010151105b80610c67575061025881600181518110610c5c57610c5c6125ad565b602002602001015110155b610ca55760405162461bcd60e51b815260206004820152600f60248201526e496e76616c696420436c6f7468657360881b60448201526064016104d0565b60c881600281518110610cba57610cba6125ad565b602002602001015110158015610ceb575061012c81600281518110610ce157610ce16125ad565b6020026020010151105b80610d12575061025881600281518110610d0757610d076125ad565b602002602001015110155b610d4d5760405162461bcd60e51b815260206004820152600c60248201526b496e76616c6964204579657360a01b60448201526064016104d0565b61012c81600381518110610d6357610d636125ad565b602002602001015110158015610d94575061019081600381518110610d8a57610d8a6125ad565b6020026020010151105b610dd35760405162461bcd60e51b815260206004820152601060248201526f467572206973204d616e6461746f727960801b60448201526064016104d0565b61019081600481518110610de957610de96125ad565b602002602001015110158015610e1a57506101f481600481518110610e1057610e106125ad565b6020026020010151105b80610e41575061025881600481518110610e3657610e366125ad565b602002602001015110155b610e7b5760405162461bcd60e51b815260206004820152600b60248201526a125b9d985b1a590812185d60aa1b60448201526064016104d0565b6101f481600581518110610e9157610e916125ad565b60200260200101511015610ed75760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c8409adeeae8d609b1b60448201526064016104d0565b8333610ee2826110d2565b6001600160a01b031614610f245760405162461bcd60e51b81526020600482015260096024820152683737ba1037bbb732b960b91b60448201526064016104d0565b835160005b81811015611084576000868281518110610f4557610f456125ad565b602002602001015190506000600960008a81526020019081526020016000208381548110610f7557610f756125ad565b9060005260206000200154905080821461107157610258821015610ffd57600854604051637921219560e11b81526001600160a01b039091169063f242432a90610fca903390309087906001906004016125c3565b600060405180830381600087803b158015610fe457600080fd5b505af1158015610ff8573d6000803e3d6000fd5b505050505b61025881101561107157600854604051637921219560e11b81526001600160a01b039091169063f242432a9061103e903090339086906001906004016125c3565b600060405180830381600087803b15801561105857600080fd5b505af115801561106c573d6000803e3d6000fd5b505050505b50508061107d90612611565b9050610f29565b50600086815260096020908152604090912086516110a492880190611e4b565b506110af8685611398565b505050505050565b610571838383604051806020016040528060008152506111d6565b6000818152600260205260408120546001600160a01b03168061039c5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104d0565b60006001600160a01b03821661119c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104d0565b506001600160a01b031660009081526003602052604090205490565b6060600180546103b190612572565b6111d23383836115e7565b5050565b6111e0338361146a565b6111fc5760405162461bcd60e51b81526004016104d09061262c565b611208848484846116b6565b50505050565b600061121960075490565b905090565b606061039c826116e9565b600081815260096020908152604091829020805483518184028101840190945280845260609392830182828015610afb5760200282019190600052602060002090815481526020019060010190808311610ae75750505050509050919050565b60006001600160e01b03198216632483248360e11b148061039c575061039c826117f2565b6000818152600260205260409020546001600160a01b031661130d5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104d0565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611345826110d2565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6111d2828260405180602001604052806000815250611842565b6000828152600260205260409020546001600160a01b03166114135760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104d0565b6000828152600660209081526040909120825161143292840190611e96565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b600080611476836110d2565b9050806001600160a01b0316846001600160a01b031614806114bd57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806114e15750836001600160a01b03166114d684610434565b6001600160a01b0316145b949350505050565b6001600160a01b0383166000908152600a60205260408120805490915b818110156115b05783838281548110611521576115216125ad565b906000526020600020015414156115a0578261153e600184612679565b8154811061154e5761154e6125ad565b906000526020600020015483828154811061156b5761156b6125ad565b90600052602060002001819055508280548061158957611589612690565b600190038181906000526020600020016000905590555b6115a981612611565b9050611506565b506001600160a01b0384166000908152600a6020908152604082208054600181018255908352912001839055610a63858585611875565b816001600160a01b0316836001600160a01b031614156116495760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104d0565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6116c18484846114e9565b6116cd848484846119d9565b6112085760405162461bcd60e51b81526004016104d0906126a6565b60606116f4826112ae565b6000828152600660205260408120805461170d90612572565b80601f016020809104026020016040519081016040528092919081815260200182805461173990612572565b80156117865780601f1061175b57610100808354040283529160200191611786565b820191906000526020600020905b81548152906001019060200180831161176957829003601f168201915b5050505050905060006117a460408051602081019091526000815290565b90508051600014156117b7575092915050565b8151156117e95780826040516020016117d19291906126f8565b60405160208183030381529060405292505050919050565b6114e184611ad7565b60006001600160e01b031982166380ac58cd60e01b148061182357506001600160e01b03198216635b5e139f60e01b145b8061039c57506301ffc9a760e01b6001600160e01b031983161461039c565b61184c8383611b4b565b61185960008484846119d9565b6105715760405162461bcd60e51b81526004016104d0906126a6565b826001600160a01b0316611888826110d2565b6001600160a01b0316146118ae5760405162461bcd60e51b81526004016104d090612727565b6001600160a01b0382166119105760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104d0565b826001600160a01b0316611923826110d2565b6001600160a01b0316146119495760405162461bcd60e51b81526004016104d090612727565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006001600160a01b0384163b15611acc57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611a1d90339089908890889060040161276c565b6020604051808303816000875af1925050508015611a58575060408051601f3d908101601f19168201909252611a55918101906127a9565b60015b611ab2573d808015611a86576040519150601f19603f3d011682016040523d82523d6000602084013e611a8b565b606091505b508051611aaa5760405162461bcd60e51b81526004016104d0906126a6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506114e1565b506001949350505050565b6060611ae2826112ae565b6000611af960408051602081019091526000815290565b90506000815111611b195760405180602001604052806000815250611b44565b80611b2384611cd6565b604051602001611b349291906126f8565b6040516020818303038152906040525b9392505050565b6001600160a01b038216611ba15760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104d0565b6000818152600260205260409020546001600160a01b031615611c065760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104d0565b6000818152600260205260409020546001600160a01b031615611c6b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104d0565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60606000611ce383611d73565b600101905060008167ffffffffffffffff811115611d0357611d0361201b565b6040519080825280601f01601f191660200182016040528015611d2d576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611d6657611d6b565b611d37565b509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611db25772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611dde576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611dfc57662386f26fc10000830492506010015b6305f5e1008310611e14576305f5e100830492506008015b6127108310611e2857612710830492506004015b60648310611e3a576064830492506002015b600a831061039c5760010192915050565b828054828255906000526020600020908101928215611e86579160200282015b82811115611e86578251825591602001919060010190611e6b565b50611e92929150611f09565b5090565b828054611ea290612572565b90600052602060002090601f016020900481019282611ec45760008555611e86565b82601f10611edd57805160ff1916838001178555611e86565b82800160010185558215611e865791820182811115611e86578251825591602001919060010190611e6b565b5b80821115611e925760008155600101611f0a565b6001600160e01b03198116811461130d57600080fd5b600060208284031215611f4657600080fd5b8135611b4481611f1e565b60005b83811015611f6c578181015183820152602001611f54565b838111156112085750506000910152565b60008151808452611f95816020860160208601611f51565b601f01601f19169290920160200192915050565b602081526000611b446020830184611f7d565b600060208284031215611fce57600080fd5b5035919050565b80356001600160a01b0381168114611fec57600080fd5b919050565b6000806040838503121561200457600080fd5b61200d83611fd5565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561205a5761205a61201b565b604052919050565b600082601f83011261207357600080fd5b8135602067ffffffffffffffff82111561208f5761208f61201b565b8160051b61209e828201612031565b92835284810182019282810190878511156120b857600080fd5b83870192505b848310156120d7578235825291830191908301906120be565b979650505050505050565b600067ffffffffffffffff8311156120fc576120fc61201b565b61210f601f8401601f1916602001612031565b905082815283838301111561212357600080fd5b828260208301376000602084830101529392505050565b600082601f83011261214b57600080fd5b611b44838335602085016120e2565b6000806040838503121561216d57600080fd5b823567ffffffffffffffff8082111561218557600080fd5b61219186838701612062565b935060208501359150808211156121a757600080fd5b506121b48582860161213a565b9150509250929050565b6000806000606084860312156121d357600080fd5b6121dc84611fd5565b92506121ea60208501611fd5565b9150604084013590509250925092565b60006020828403121561220c57600080fd5b611b4482611fd5565b6020808252825182820181905260009190848201906040850190845b8181101561224d57835183529284019291840191600101612231565b50909695505050505050565b60008060006060848603121561226e57600080fd5b83359250602084013567ffffffffffffffff8082111561228d57600080fd5b61229987838801612062565b935060408601359150808211156122af57600080fd5b506122bc8682870161213a565b9150509250925092565b600080604083850312156122d957600080fd5b6122e283611fd5565b9150602083013580151581146122f757600080fd5b809150509250929050565b6000806000806080858703121561231857600080fd5b61232185611fd5565b935061232f60208601611fd5565b925060408501359150606085013567ffffffffffffffff81111561235257600080fd5b8501601f8101871361236357600080fd5b612372878235602084016120e2565b91505092959194509250565b60008083601f84011261239057600080fd5b50813567ffffffffffffffff8111156123a857600080fd5b6020830191508360208260051b85010111156123c357600080fd5b9250929050565b60008083601f8401126123dc57600080fd5b50813567ffffffffffffffff8111156123f457600080fd5b6020830191508360208285010111156123c357600080fd5b60008060008060008060008060a0898b03121561242857600080fd5b61243189611fd5565b975061243f60208a01611fd5565b9650604089013567ffffffffffffffff8082111561245c57600080fd5b6124688c838d0161237e565b909850965060608b013591508082111561248157600080fd5b61248d8c838d0161237e565b909650945060808b01359150808211156124a657600080fd5b506124b38b828c016123ca565b999c989b5096995094979396929594505050565b600080604083850312156124da57600080fd5b6124e383611fd5565b91506124f160208401611fd5565b90509250929050565b60008060008060008060a0878903121561251357600080fd5b61251c87611fd5565b955061252a60208801611fd5565b94506040870135935060608701359250608087013567ffffffffffffffff81111561255457600080fd5b61256089828a016123ca565b979a9699509497509295939492505050565b600181811c9082168061258657607f821691505b602082108114156125a757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b634e487b7160e01b600052601160045260246000fd5b6000600019821415612625576126256125fb565b5060010190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008282101561268b5761268b6125fb565b500390565b634e487b7160e01b600052603160045260246000fd5b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000835161270a818460208801611f51565b83519083019061271e818360208801611f51565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061279f90830184611f7d565b9695505050505050565b6000602082840312156127bb57600080fd5b8151611b4481611f1e56fea2646970667358221220869ddd455d1dac83efe542ddbb785d675820e035c0b5ec4d7c5610724bfc2d6864736f6c634300080a0033";

type MaxConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MaxConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Max__factory extends ContractFactory {
  constructor(...args: MaxConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _maxContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Max> {
    return super.deploy(_maxContract, overrides || {}) as Promise<Max>;
  }
  override getDeployTransaction(
    _maxContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_maxContract, overrides || {});
  }
  override attach(address: string): Max {
    return super.attach(address) as Max;
  }
  override connect(signer: Signer): Max__factory {
    return super.connect(signer) as Max__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MaxInterface {
    return new utils.Interface(_abi) as MaxInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Max {
    return new Contract(address, _abi, signerOrProvider) as Max;
  }
}
