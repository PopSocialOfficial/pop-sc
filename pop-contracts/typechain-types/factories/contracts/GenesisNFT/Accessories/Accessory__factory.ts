/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Accessory,
  AccessoryInterface,
} from "../../../../contracts/GenesisNFT/Accessories/Accessory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "energyPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_points",
        type: "uint256",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100dd565b600054610100900460ff161561008a5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100db576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b611ea8806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c80636d915615116100ad578063a22cb46511610071578063a22cb46514610262578063c87b56dd14610275578063e985e9c514610288578063f242432a146102c4578063f2fde38b146102d757600080fd5b80636d91561514610211578063715018a614610224578063731133e91461022c5780638da5cb5b1461023f57806395d89b411461025a57600080fd5b80631f7fdffa116100f45780631f7fdffa146101965780632eb2c2d6146101ab5780634c934c93146101be5780634cd88b76146101de5780634e1273f4146101f157600080fd5b8062fdd58e1461012557806301ffc9a71461014b57806306fdde031461016e5780630e89341c14610183575b600080fd5b6101386101333660046113d8565b6102ea565b6040519081526020015b60405180910390f35b61015e610159366004611418565b610382565b6040519015158152602001610142565b6101766103d4565b6040516101429190611489565b61017661019136600461149c565b610462565b6101a96101a4366004611601565b610504565b005b6101a96101b936600461169a565b61051e565b6101386101cc36600461149c565b60cc6020526000908152604090205481565b6101a96101ec366004611744565b61056a565b6102046101ff3660046117a8565b6106bd565b60405161014291906118a4565b6101a961021f3660046118b7565b6107e7565b6101a9610856565b6101a961023a366004611907565b61086a565b6097546040516001600160a01b039091168152602001610142565b61017661087e565b6101a961027036600461195c565b61088b565b61017661028336600461149c565b61089a565b61015e610296366004611998565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b6101a96102d23660046119cb565b6108b3565b6101a96102e5366004611a30565b6108f8565b60006001600160a01b03831661035a5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b5060009081526065602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806103b357506001600160e01b031982166303a24d0760e21b145b806103ce57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60c980546103e190611a4b565b80601f016020809104026020016040519081016040528092919081815260200182805461040d90611a4b565b801561045a5780601f1061042f5761010080835404028352916020019161045a565b820191906000526020600020905b81548152906001019060200180831161043d57829003601f168201915b505050505081565b600081815260cb6020526040902080546060919061047f90611a4b565b80601f01602080910402602001604051908101604052809291908181526020018280546104ab90611a4b565b80156104f85780601f106104cd576101008083540402835291602001916104f8565b820191906000526020600020905b8154815290600101906020018083116104db57829003601f168201915b50505050509050919050565b61050c610971565b610518848484846109cb565b50505050565b6001600160a01b03851633148061053a575061053a8533610296565b6105565760405162461bcd60e51b815260040161035190611a86565b6105638585858585610b17565b5050505050565b600054610100900460ff161580801561058a5750600054600160ff909116105b806105a45750303b1580156105a4575060005460ff166001145b6106075760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610351565b6000805460ff19166001179055801561062a576000805461ff0019166101001790555b61064260405180602001604052806000815250610cb6565b61064a610ce6565b825161065d9060c9906020860190611323565b5081516106719060ca906020850190611323565b5080156106b8576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b606081518351146107225760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610351565b6000835167ffffffffffffffff81111561073e5761073e6114b5565b604051908082528060200260200182016040528015610767578160200160208202803683370190505b50905060005b84518110156107df576107b285828151811061078b5761078b611ad4565b60200260200101518583815181106107a5576107a5611ad4565b60200260200101516102ea565b8282815181106107c4576107c4611ad4565b60209081029190910101526107d881611b00565b905061076d565b509392505050565b6107ef610971565b600083815260cc6020908152604080832084905560cb8252909120835161081892850190611323565b50827f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b836040516108499190611489565b60405180910390a2505050565b61085e610971565b6108686000610d15565b565b610872610971565b61051884848484610d67565b60ca80546103e190611a4b565b610896338383610e43565b5050565b60cb60205260009081526040902080546103e190611a4b565b6001600160a01b0385163314806108cf57506108cf8533610296565b6108eb5760405162461bcd60e51b815260040161035190611a86565b6105638585858585610f24565b610900610971565b6001600160a01b0381166109655760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610351565b61096e81610d15565b50565b6097546001600160a01b031633146108685760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610351565b6001600160a01b0384166109f15760405162461bcd60e51b815260040161035190611b1b565b8151835114610a125760405162461bcd60e51b815260040161035190611b5c565b3360005b8451811015610aaf57838181518110610a3157610a31611ad4565b602002602001015160656000878481518110610a4f57610a4f611ad4565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b031681526020019081526020016000206000828254610a979190611ba4565b90915550819050610aa781611b00565b915050610a16565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610b00929190611bbc565b60405180910390a461056381600087878787611052565b8151835114610b385760405162461bcd60e51b815260040161035190611b5c565b6001600160a01b038416610b5e5760405162461bcd60e51b815260040161035190611bea565b3360005b8451811015610c48576000858281518110610b7f57610b7f611ad4565b602002602001015190506000858381518110610b9d57610b9d611ad4565b60209081029190910181015160008481526065835260408082206001600160a01b038e168352909352919091205490915081811015610bee5760405162461bcd60e51b815260040161035190611c2f565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610c2d908490611ba4565b9250508190555050505080610c4190611b00565b9050610b62565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610c98929190611bbc565b60405180910390a4610cae818787878787611052565b505050505050565b600054610100900460ff16610cdd5760405162461bcd60e51b815260040161035190611c79565b61096e816111ae565b600054610100900460ff16610d0d5760405162461bcd60e51b815260040161035190611c79565b6108686111de565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416610d8d5760405162461bcd60e51b815260040161035190611b1b565b336000610d998561120e565b90506000610da68561120e565b905060008681526065602090815260408083206001600160a01b038b16845290915281208054879290610dda908490611ba4565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e3a83600089898989611259565b50505050505050565b816001600160a01b0316836001600160a01b03161415610eb75760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b6064820152608401610351565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610f4a5760405162461bcd60e51b815260040161035190611bea565b336000610f568561120e565b90506000610f638561120e565b905060008681526065602090815260408083206001600160a01b038c16845290915290205485811015610fa85760405162461bcd60e51b815260040161035190611c2f565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610fe7908490611ba4565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611047848a8a8a8a8a611259565b505050505050505050565b6001600160a01b0384163b15610cae5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906110969089908990889088908890600401611cc4565b6020604051808303816000875af19250505080156110d1575060408051601f3d908101601f191682019092526110ce91810190611d22565b60015b61117e576110dd611d3f565b806308c379a0141561111757506110f2611d5b565b806110fd5750611119565b8060405162461bcd60e51b81526004016103519190611489565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610351565b6001600160e01b0319811663bc197c8160e01b14610e3a5760405162461bcd60e51b815260040161035190611de5565b600054610100900460ff166111d55760405162461bcd60e51b815260040161035190611c79565b61096e81611314565b600054610100900460ff166112055760405162461bcd60e51b815260040161035190611c79565b61086833610d15565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061124857611248611ad4565b602090810291909101015292915050565b6001600160a01b0384163b15610cae5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e619061129d9089908990889088908890600401611e2d565b6020604051808303816000875af19250505080156112d8575060408051601f3d908101601f191682019092526112d591810190611d22565b60015b6112e4576110dd611d3f565b6001600160e01b0319811663f23a6e6160e01b14610e3a5760405162461bcd60e51b815260040161035190611de5565b80516108969060679060208401905b82805461132f90611a4b565b90600052602060002090601f0160209004810192826113515760008555611397565b82601f1061136a57805160ff1916838001178555611397565b82800160010185558215611397579182015b8281111561139757825182559160200191906001019061137c565b506113a39291506113a7565b5090565b5b808211156113a357600081556001016113a8565b80356001600160a01b03811681146113d357600080fd5b919050565b600080604083850312156113eb57600080fd5b6113f4836113bc565b946020939093013593505050565b6001600160e01b03198116811461096e57600080fd5b60006020828403121561142a57600080fd5b813561143581611402565b9392505050565b6000815180845260005b8181101561146257602081850181015186830182015201611446565b81811115611474576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611435602083018461143c565b6000602082840312156114ae57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156114f1576114f16114b5565b6040525050565b600067ffffffffffffffff821115611512576115126114b5565b5060051b60200190565b600082601f83011261152d57600080fd5b8135602061153a826114f8565b60405161154782826114cb565b83815260059390931b850182019282810191508684111561156757600080fd5b8286015b84811015611582578035835291830191830161156b565b509695505050505050565b600082601f83011261159e57600080fd5b813567ffffffffffffffff8111156115b8576115b86114b5565b6040516115cf601f8301601f1916602001826114cb565b8181528460208386010111156115e457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561161757600080fd5b611620856113bc565b9350602085013567ffffffffffffffff8082111561163d57600080fd5b6116498883890161151c565b9450604087013591508082111561165f57600080fd5b61166b8883890161151c565b9350606087013591508082111561168157600080fd5b5061168e8782880161158d565b91505092959194509250565b600080600080600060a086880312156116b257600080fd5b6116bb866113bc565b94506116c9602087016113bc565b9350604086013567ffffffffffffffff808211156116e657600080fd5b6116f289838a0161151c565b9450606088013591508082111561170857600080fd5b61171489838a0161151c565b9350608088013591508082111561172a57600080fd5b506117378882890161158d565b9150509295509295909350565b6000806040838503121561175757600080fd5b823567ffffffffffffffff8082111561176f57600080fd5b61177b8683870161158d565b9350602085013591508082111561179157600080fd5b5061179e8582860161158d565b9150509250929050565b600080604083850312156117bb57600080fd5b823567ffffffffffffffff808211156117d357600080fd5b818501915085601f8301126117e757600080fd5b813560206117f4826114f8565b60405161180182826114cb565b83815260059390931b850182019282810191508984111561182157600080fd5b948201945b8386101561184657611837866113bc565b82529482019490820190611826565b9650508601359250508082111561185c57600080fd5b5061179e8582860161151c565b600081518084526020808501945080840160005b838110156118995781518752958201959082019060010161187d565b509495945050505050565b6020815260006114356020830184611869565b6000806000606084860312156118cc57600080fd5b83359250602084013567ffffffffffffffff8111156118ea57600080fd5b6118f68682870161158d565b925050604084013590509250925092565b6000806000806080858703121561191d57600080fd5b611926856113bc565b93506020850135925060408501359150606085013567ffffffffffffffff81111561195057600080fd5b61168e8782880161158d565b6000806040838503121561196f57600080fd5b611978836113bc565b91506020830135801515811461198d57600080fd5b809150509250929050565b600080604083850312156119ab57600080fd5b6119b4836113bc565b91506119c2602084016113bc565b90509250929050565b600080600080600060a086880312156119e357600080fd5b6119ec866113bc565b94506119fa602087016113bc565b93506040860135925060608601359150608086013567ffffffffffffffff811115611a2457600080fd5b6117378882890161158d565b600060208284031215611a4257600080fd5b611435826113bc565b600181811c90821680611a5f57607f821691505b60208210811415611a8057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611b1457611b14611aea565b5060010190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b60008219821115611bb757611bb7611aea565b500190565b604081526000611bcf6040830185611869565b8281036020840152611be18185611869565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611cf090830186611869565b8281036060840152611d028186611869565b90508281036080840152611d16818561143c565b98975050505050505050565b600060208284031215611d3457600080fd5b815161143581611402565b600060033d1115611d585760046000803e5060005160e01c5b90565b600060443d1015611d695790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611d9957505050505090565b8285019150815181811115611db15750505050505090565b843d8701016020828501011115611dcb5750505050505090565b611dda602082860101876114cb565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611e679083018461143c565b97965050505050505056fea26469706673582212206a60febcaa2bfb208165f98ae1ab6d54f71ca3d85705d69477d2d2433ae44cd664736f6c634300080a0033";

type AccessoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Accessory__factory extends ContractFactory {
  constructor(...args: AccessoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Accessory> {
    return super.deploy(overrides || {}) as Promise<Accessory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Accessory {
    return super.attach(address) as Accessory;
  }
  override connect(signer: Signer): Accessory__factory {
    return super.connect(signer) as Accessory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessoryInterface {
    return new utils.Interface(_abi) as AccessoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Accessory {
    return new Contract(address, _abi, signerOrProvider) as Accessory;
  }
}
