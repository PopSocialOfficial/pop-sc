/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TokenSaleDistributorProxyStorage,
  TokenSaleDistributorProxyStorageInterface,
} from "../../../contracts/vesting/TokenSaleDistributorProxyStorage";

const _abi = [
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060e58061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060465760003560e01c80632678224714604b578063396f7b231460795780635c60da1b14608b578063f851a44014609d575b600080fd5b600154605d906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b600354605d906001600160a01b031681565b600254605d906001600160a01b031681565b600054605d906001600160a01b03168156fea26469706673582212205ffd2801a2a72aa97d689893dc8251ea4c49fdb1d1c170d0137e81c37d91252164736f6c634300080a0033";

type TokenSaleDistributorProxyStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenSaleDistributorProxyStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenSaleDistributorProxyStorage__factory extends ContractFactory {
  constructor(...args: TokenSaleDistributorProxyStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenSaleDistributorProxyStorage> {
    return super.deploy(
      overrides || {}
    ) as Promise<TokenSaleDistributorProxyStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenSaleDistributorProxyStorage {
    return super.attach(address) as TokenSaleDistributorProxyStorage;
  }
  override connect(signer: Signer): TokenSaleDistributorProxyStorage__factory {
    return super.connect(signer) as TokenSaleDistributorProxyStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenSaleDistributorProxyStorageInterface {
    return new utils.Interface(
      _abi
    ) as TokenSaleDistributorProxyStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenSaleDistributorProxyStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenSaleDistributorProxyStorage;
  }
}
