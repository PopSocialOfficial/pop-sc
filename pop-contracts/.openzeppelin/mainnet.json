{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8f1B386F7fa56f762A6695581467ca66172dA736",
    "txHash": "0xfd1b2a128075983843fea0e71505b8522e27c3ce87a1ef38514108bf7e639500"
  },
  "proxies": [
    {
      "address": "0xC1Dd2B220559d44Dab31f753bEcD4B030fAa5ef8",
      "txHash": "0x0c578581b39e796bc9e94d66df4575d1566b20e038a08e158e8500214d11da95",
      "kind": "transparent"
    }
  ],
  "impls": {
    "56a9c55495fc12d2be6431159b7dee534b5dc602dfc2a5d70e252370f54d0a33": {
      "address": "0x9857C82e2ee05517d561a4B4185E3A1300783027",
      "txHash": "0xf1a877801ddef0c2625ccb30ee23caae26496279b31e2952816f943aa8ab491d",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "201",
            "type": "t_struct(Counter)3515_storage",
            "contract": "Genesis",
            "src": "contracts/NFTs/GenesisNFT/Genesis.sol:22"
          },
          {
            "label": "whitelistedContracts",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Genesis",
            "src": "contracts/NFTs/GenesisNFT/Genesis.sol:23"
          },
          {
            "label": "equippedAccessories",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Accessory)4118_storage))",
            "contract": "Genesis",
            "src": "contracts/NFTs/GenesisNFT/Genesis.sol:24"
          },
          {
            "label": "accessoryOrder",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Genesis",
            "src": "contracts/NFTs/GenesisNFT/Genesis.sol:25"
          },
          {
            "label": "totalSupply",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "Genesis",
            "src": "contracts/NFTs/GenesisNFT/Genesis.sol:26"
          },
          {
            "label": "salePrice",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "Genesis",
            "src": "contracts/NFTs/GenesisNFT/Genesis.sol:27"
          },
          {
            "label": "saleStartAt",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "Genesis",
            "src": "contracts/NFTs/GenesisNFT/Genesis.sol:28"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "Genesis",
            "src": "contracts/NFTs/GenesisNFT/Genesis.sol:29"
          },
          {
            "label": "whitelistMerkleRoot",
            "offset": 0,
            "slot": "209",
            "type": "t_bytes32",
            "contract": "Genesis",
            "src": "contracts/NFTs/GenesisNFT/Genesis.sol:30"
          },
          {
            "label": "accessorySlots",
            "offset": 0,
            "slot": "210",
            "type": "t_uint8",
            "contract": "Genesis",
            "src": "contracts/NFTs/GenesisNFT/Genesis.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Accessory)4118_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Genesis.Accessory))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Accessory)4118_storage)": {
            "label": "mapping(uint256 => struct Genesis.Accessory)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Accessory)4118_storage": {
            "label": "struct Genesis.Accessory",
            "members": [
              {
                "label": "contractAddr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "accessoryId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Counter)3515_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
